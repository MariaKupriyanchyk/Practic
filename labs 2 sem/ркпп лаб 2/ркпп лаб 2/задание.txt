Создать параметризованный класс данных (шаблон) - массив данных о студентах (с динамическим выделением памяти) - MASSIV.
Этот класс предназначен для ввода, хранения и вывода информации.
Переменными-членами класса являются количество записей и указатель на массив структур.
Данные о каждой записи хранятся в структуре. 

1) Для класса-шаблона "MASSIV" реализовать основные функции для работы с массивом:
конструкторы, деструктор
ввод из текстового потока (файла) массива данных (operator >>)
вывод в текстовый поток (файл) и на консоль массива данных (operator <<)
вывод в бинарный поток (файл) массива данных или один элемент массива (ф. seekp)
ввод из бинарного потока (файла) массив данных или один элемент массива (ф. seek), только после того как записали данные в бинарный файл
перегрузка оператора ввода и вывода для Struct (operator >>, operator <<)
operator=
доступ к элементу (operator[])
создать на основе этих данных новый массив (функц. 1 согласно индивидуальному варианту). 
Упорядочить полученный массив в порядке (функц. 3 согласно индивидуальному варианту).

2) Для структур (классов) Element1, Element2, Element3:
конструкторы, деструктор
перегрузка оператора ввода и вывода для Struct (operator >>, operator <<) (можно как ф. шаблон)
operator=, operator<, operator== (можно и как функция-шаблон)

3) Х.function1(K,M); //Функция-шаблон внутри класса-шаблона - объединения (или пересечения, или разности) массивов (согласно инд. варианту)

4) Создать отдельную функцию шаблон, с параметром класс-шаблон MASSIV и элемент структуры: 
search_function2 (Х, st) (функц. 2 согласно индивидуальному варианту)

5) Реализовать вне класса - шаблона одну дружественную функцию и любой один метод класса шаблона.

6) В шаблоне MASSIV, обрабатывать только массив, поля структур не использовать!

7) В main должны быть объекты шаблона MASSIV для типов: double (или char, или float, или long),
для трех типов структур (классов): Element1, Element2, Element3 и вызваны методы поиска и сортировки и слияния массивов (согласно инд. варианту) 

8) Частичное описание класса шаблона, методов, структур и функции main() смотрите в файле:
шаблон пример со сложными типами-структурами (скелет лабораторной) .doc в материалах!


ИНДИВИДУАЛЬНОЕ ЗАДАНИЕ:

9. Element1 - «Студенты факультета»,
Element2 - «Студенты, имеющие задолженности по сессии»,
Element3 -  «Студенты, сдавшие сессию».

struct Element1
{
char Name[50];
int  kurs;
};


struct Element2
{
char Name[50];
int  Count;
int  kurs;
…
};


struct Element3
{
char Name[50];
int  kurs;
…
};

Функции:
1. Сформировать массив Element3, как разность Element1 и Element2, содержащий данные только о тех студентах,
которые присутствуют в первом массиве и отсутствуют во втором.
2. Поиск в Element1 студентов–старшекурсников.
3. Сортировка Element3 по полю kurs.